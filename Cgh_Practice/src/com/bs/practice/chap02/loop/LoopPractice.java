package com.bs.practice.chap02.loop;

public class LoopPractice {
	public void practice1() {		
//		사용자로부터한개의값을입력받아1부터그숫자까지의숫자들을모두출력하세요.
//		단, 입력한수는1보다크거나같아야합니다.
//		만일1 미만의숫자가입력됐다면“1 이상의숫자를입력해주세요“를출력하세요.
//		 ex.
//		 1이상의숫자를입력하세요: 4 		1이상의숫자를입력하세요: 0
//		 1 2 3 4 					1 이상의숫자를입력해주세요.

	}

	public void practice2() {		
//		위문제와모든것이동일하나, 1 미만의숫자가입력됐다면
//		“1 이상의숫자를입력해주세요”가출력되면서다시사용자가값을입력하도록하세요.
//		 ex.
//		 1이상의숫자를입력하세요: 4 		1이상의숫자를입력하세요: 0
//		 1 2 3 4 					1 이상의숫자를입력해주세요.
//		 							1이상의숫자를입력하세요: 8
//		 							1 2 3 4 5 6 7 8 
//
//	}
//
//	public void practice3() {		
//		사용자로부터한개의값을입력받아1부터그숫자까지의모든숫자를거꾸로출력하세요.
//		단, 입력한수는1보다크거나같아야합니다.
//		 ex.
//		 1이상의숫자를입력하세요: 4 		1이상의숫자를입력하세요: 0
//		 4 3 2 1 					1 이상의숫자를입력해주세요.

	}

	public void practice4() {		
//		위문제와모든것이동일하나, 1 미만의숫자가입력됐다면
//		“1 이상의숫자를입력해주세요”가출력되면서다시사용자가값을입력하도록하세요.
//		 ex.
//		 1이상의숫자를입력하세요: 4 		1이상의숫자를입력하세요: 0
//		 4 3 2 1 					1 이상의숫자를입력해주세요.
//		 							1이상의숫자를입력하세요: 8
//		 							8 7 6 5 4 3 2 1

	}

	public void practice5() {		
//		 1부터사용자에게입력받은수까지의정수들의합을출력하세요.
//		 ex.
//		 정수를하나입력하세요: 8
//		 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 = 36

	}

	public void practice6() {		
//		사용자로부터두개의값을입력받아그사이의숫자를모두출력하세요.
//		만일1 미만의숫자가입력됐다면“1 이상의숫자를입력해주세요“를출력하세요.
//		 ex.
//		첫번째숫자: 8		첫번째숫자: 4			첫번째숫자: 9
//		두번째숫자: 4 		두번째숫자: 8 			두번째숫자: 0
//		4 5 6 7 8 		4 5 6 7 8 			1 이상의숫자를입력해주세요.

	}

	public void practice7() {		
//		위문제와모든것이동일하나, 1 미만의숫자가입력됐다면
//		“1 이상의숫자를입력해주세요”가출력되면서다시사용자가값을입력하도록하세요.
//		 ex.
//		첫번째숫자: 8		첫번째숫자: 4		첫번째숫자: 9
//		두번째숫자: 4 		두번째숫자: 8 		두번째숫자: 0
//		4 5 6 7 8 		4 5 6 7 8 		1 이상의숫자를입력해주세요.
//										첫번째숫자: 6
//										두번째숫자: 2
//										2 3 4 5 6
	}

	public void practice8() {		
//		사용자로부터입력받은숫자의단을출력하세요.
//		 ex.
//		숫자: 4
//		 ===== 4단=====
//		 4 * 1 = 4
//		 4 * 2 = 8
//		 4 * 3 = 12
//		 4 * 4 = 16
//		 4 * 5 = 20
//		 4 * 6 = 24
//		 4 * 7 = 28
//		 4 * 8 = 32
//		 4 * 9 = 36

	}

	public void practice9() {		
//		사용자로부터입력받은숫자의단부터9단까지출력하세요.
//		단, 9를초과하는숫자가들어오면“9 이하의숫자만입력해주세요”를출력하세요.
//		 숫자: 4						숫자: 10
//		 ===== 4단===== 				9 이하의숫자만입력해주세요.
//		 ===== 5단=====
//		 ===== 6단=====
//		 ===== 7단=====
//		 ===== 8단=====
//		 ===== 9단=====
//		 (해당단의내용들은길이상생략)

	}

	public void practice10() {		
//		위문제와모든것이동일하나, 9를초과하는숫자가입력됐다면
//		“9 이하의숫자를입력해주세요”가출력되면서다시사용자가값을입력하도록하세요.
//		숫자: 4						숫자: 10
//		 ===== 4단===== 				9 이하의숫자만입력해주세요.
//		 ===== 5단===== 				숫자: 8
//		 ===== 6단===== 				===== 8단=====
//		 ===== 7단===== 				===== 9단=====
//		 ===== 8단=====
//		 ===== 9단=====
//		 (해당단의내용들은길이상생략)

	}

	public void practice11() {		
//		사용자로부터시작숫자와공차를입력받아
//		일정한값으로숫자가커지거나작아지는프로그램을구현하세요.
//		단, 출력되는숫자는총10개입니다.
//		 * ‘공차’는숫자들사이에서일정한숫자의차가존재하는것을말한다.
//		 ex) 2, 7, 12, 17, 22 …
//		 		5  5  5  5  => 여기서공차는5
//		 ex.
//		시작숫자: 4
//		공차: 3
//		 4 7 10 13 16 19 22 25 28 31

	}

	public void practice12() {		
//		정수두개와연산자를입력받고입력된연산자에따라알맞은결과를출력하세요.
//		단, 해당프로그램은연산자입력에“exit”라는값이들어올때까지무한반복하며
//		exit가들어오면“프로그램을종료합니다.”를출력하고종료합니다.
//		또한연산자가나누기이면서두번째정수가0으로들어오면
//		“0으로나눌수없습니다. 다시입력해주세요.”를출력하며,
//		없는연산자가들어올시“없는연산자입니다. 다시입력해주세요.”라고출력하고
//		두경우모두처음으로돌아가사용자가다시연산자부터입력하도록하세요.
//		 [다음장출력예시참고]
//				 
//				 연산자(+, -, *, /, %) : +
//				 정수1 : 10
//				 정수2 : 4
//				  10 + 4 = 14
//				  
//				  
//				 연산자(+, -, *, /, %) : /			연산자(+, -, *, /, %) : /
//				 정수1 : 10 							정수1 : 10
//				 정수2 : 4 							정수2 : 0
//				  10 / 4 = 2 						0으로나눌수없습니다. 다시입력해주세요.
//				  
//				  
//				 연산자(+, -, *, /, %) : ^ 			연산자(+, -, *, /, %) : exit
//				 정수1 : 10 							프로그램을종료합니다.
//				 정수2 : 4
//				 없는연산자입니다. 다시입력해주세요.


	}

	public void practice13() {		
//		다음과같은실행예제를구현하세요.
//		 ex.
//		정수입력: 4
//		 *
//		 **
//		 ***
//		 ****

	}

	public void practice14() {		
//		다음과같은실행예제를구현하세요.
//		 ex.
//		정수입력: 4
//		 ****
//		 ***
//		 **
//		 *
	}
	
}
